# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

defaults: &defaults
  working_directory: /tmp

version: 2
jobs:
  docker_snapshot_arm32v7:
    <<: *defaults
    machine: true
    working_directory: ~/repo
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: List files on directory /tmp/workspace/build
          comand: ls -l /tmp/workspace/build

      - run:
          name: Copy artifact
          command: |
            mkdir -p ~/repo/build
            cp /tmp/workspace/build/*.jar ~/repo/build

      - run:
          name: Build Docker image
          command: |
            export GIT_COMMIT=$(git rev-parse --short HEAD)
            docker build -t stockanalyses/webinterface:armhf-$GIT_COMMIT -f Dockerfile.arm32v7 .

      - run:
          name: Push to DockerHub
          command: |
            wget https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-amd64
            chmod +x manifest-tool-linux-amd64
            export GIT_COMMIT=$(git rev-parse --short HEAD)
            docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
            docker push stockanalyses/webinterface:armhf-$GIT_COMMIT
            sed -i "s|{image}|downloader|g" manifest.yaml
            sed -i "s|{tag}|armhf-$GIT_COMMIT|g" manifest.yaml
            sed -i "s|{majmin}|armhf-$GIT_COMMIT|g" manifest.yaml
            ./manifest-tool-linux-amd64 push from-spec manifest.yaml

  docker_snapshot_amd64:
    <<: *defaults
    machine: true
    working_directory: ~/repo
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: List files on directory /tmp/workspace/build
          command: ls -l /tmp/workspace/build

      - run:
          name: Copy artifact
          command: |
            mkdir -p ~/repo/build
            cp /tmp/workspace/build/*.jar ~/repo/build

      - run:
          name: Build Docker image
          command: |
            export GIT_COMMIT=$(git rev-parse --short HEAD)
            docker build -t stockanalyses/webinterface:$GIT_COMMIT .

      - run:
          name: Push to DockerHub
          command: |
            export GIT_COMMIT=$(git rev-parse --short HEAD)
            docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
            docker push stockanalyses/webinterface:$GIT_COMMIT

  publish_release:
    <<: *defaults
    machine: true
    working_directory: ~/repo
    steps:
      - checkout

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Copy artifact
          command: |
            mkdir -p ~/repo/build
            cp /tmp/workspace/build/*.jar ~/repo/build

      - run:
          name: Build Docker image
          command: |
            export GIT_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            docker build -t stockanalyses/webinterface:$GIT_TAG .

      - run:
          name: Push to DockerHub
          command: |
            export GIT_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
            docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASSWORD
            docker push stockanalyses/webinterface:$GIT_TAG

  build_release:
    <<: *defaults
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
          - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: Build application
          command: mvn clean package -Pprod -Dspring.profiles.active=prod

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          path: target/surefire-reports

      - store_artifacts:
          path: build

      - persist_to_workspace:
          root: ~/repo
          paths:
          - build/*

  build_snapshot:
    <<: *defaults
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
          - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: Build application
          command: mvn clean package -Pdev -Dspring.profiles.active=dev

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          path: target/surefire-reports

      - store_artifacts:
          path: build

      - persist_to_workspace:
          root: ~/repo
          paths:
          - build/*


workflows:
  version: 2
  release:
    jobs:
      - build_release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+/
      - publish_release:
          requires:
            - build_release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+\.[0-9]+\.[0-9]+/
  snapshot:
    jobs:
      - build_snapshot:
          filters:
            tags:
              ignore: /v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              only: master
      - docker_snapshot_amd64:
          requires:
            - build_snapshot
          filters:
            tags:
              ignore: /v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              only: master
      - docker_snapshot_arm32v7:
          requires:
            - build_snapshot
          filters:
            tags:
              ignore: /v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              only: master